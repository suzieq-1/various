global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon
        maxconn 2000

        #timeouts https://delta.blue/blog/haproxy-timeouts/
        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # intermediate configuration
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA2>
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

        ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACH>
        ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http
        timeout client 30s
        timeout connect 4s
        timeout server 60s
        timeout http-request 10s
        timeout http-keep-alive 2s
        timeout queue 5s
        timeout tunnel 2m
        timeout client-fin 1s
        timeout server-fin 1s

frontend http-redirect
        bind *:80
        redirect scheme https code 301 if !{ ssl_fc }

frontend https
        mode http
        bind *:443 ssl crt /etc/letsencrypt/live/whatever/fullchain.pem crt /etc/letsencrypt/live/whatever/fullchain.pem crt /etc/letsencrypt/live/whatever/fullchain.pem alpn h2,http/1.1

        acl letsencrypt-acl path_beg /.well-known/acme-challenge/
        acl whitelist src -f /etc/haproxy/NL.txt

        tcp-request connection reject if !whitelist

        redirect scheme https code 301 if !{ ssl_fc }

        option tcplog
        option forwardfor

        http-response set-header Strict-Transport-Security max-age=63072000

        use_backend letsencrypt-backend if letsencrypt-acl
        use_backend backend1 if { ssl_fc_sni thisthing.com }
        use_backend backend2 if { ssl_fc_sni someotherthing.net }
        use_backend backend3 if { ssl_fc_sni something.com }

backend letsencrypt-backend
        server certbot 127.0.0.1:8899

backend backend1
        mode http
        server nginx1 172.30.0.5:8888 send-proxy check

backend backend2
        mode http
        server nginx2 1.1.1.1:8888 send-proxy check

backend backend3
        mode http
        server nginx3 2.2.2.2:8889 send-proxy check



